import { ObservableMaybe, ViewElement, ViewChild } from '~/types';
declare const normalizeChildren: (children: ViewChild[]) => ViewChild[];
declare const prepareChildren: (children: ViewChild[]) => ViewElement;
declare const prepareChild: (child: ViewChild) => ViewElement;
declare const setAbstract: <T>(value: ObservableMaybe<T>, setter: (value: T, valuePrev?: T | undefined) => void) => void;
declare const setAttributeStatic: (attributes: NamedNodeMap, key: string, value: null | undefined | boolean | number | string) => void;
declare const setAttribute: (element: HTMLElement, key: string, value: ObservableMaybe<null | undefined | boolean | number | string>) => void;
declare const replaceChild: (child: ViewChild, childPrev: Node) => void;
declare const setChildStatic: (parent: HTMLElement, child: ViewChild, childrenPrev: Node[]) => Node[];
declare const setChild: (parent: HTMLElement, child: ViewChild, childrenPrev?: Node[]) => Node[];
declare const setChildren: (parent: HTMLElement, children: ViewChild[]) => void;
declare const setClassStatic: (classList: DOMTokenList, key: string, value: boolean) => void;
declare const setClass: (classList: DOMTokenList, key: string, value: ObservableMaybe<boolean>) => void;
declare const setClassesStatic: (element: HTMLElement, object: string | Record<string, ObservableMaybe<boolean>>, objectPrev?: string | Record<string, ObservableMaybe<boolean>> | undefined) => void;
declare const setClasses: (element: HTMLElement, object: ObservableMaybe<string | Record<string, ObservableMaybe<boolean>>>) => void;
declare const setHTMLStatic: (element: HTMLElement, value: null | undefined | number | string) => void;
declare const setHTML: (element: HTMLElement, value: ObservableMaybe<{
    __html: ObservableMaybe<null | undefined | number | string>;
}>) => void;
declare const setPropertyStatic: (element: HTMLElement, key: string, value: null | undefined | boolean | number | string | Function) => void;
declare const setProperty: (element: HTMLElement, key: string, value: ObservableMaybe<null | undefined | boolean | number | string | Function>) => void;
declare const setStyleStatic: (style: CSSStyleDeclaration, key: string, value: null | undefined | number | string) => void;
declare const setStyle: (style: CSSStyleDeclaration, key: string, value: ObservableMaybe<null | undefined | number | string>) => void;
declare const setStylesStatic: (style: CSSStyleDeclaration, object: string | Record<string, ObservableMaybe<null | undefined | number | string>>, objectPrev?: string | Record<string, ObservableMaybe<string | number | null | undefined>> | undefined) => void;
declare const setStyles: (element: HTMLElement, object: ObservableMaybe<string | Record<string, ObservableMaybe<null | undefined | number | string>>>) => void;
declare const setProp: (element: HTMLElement, key: string, value: any) => void;
declare const setProps: (element: HTMLElement, object: Record<string, any>) => void;
export { normalizeChildren, prepareChildren, prepareChild };
export { setAbstract, setAttributeStatic, setAttribute, replaceChild, setChildStatic, setChild, setChildren, setClassStatic, setClass, setClassesStatic, setClasses, setHTMLStatic, setHTML, setPropertyStatic, setProperty, setStyleStatic, setStyle, setStylesStatic, setStyles, setProp, setProps };
